{"timestamp":"2025-07-13T16:02:26.737827","level":"info","event":"DAG bundles loaded: dags-folder","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-13T16:02:26.740208","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/data_ingestion_localpg_dag.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-13T16:02:27.173389","level":"error","event":"Task failed with exception","logger":"task","error_detail":[{"exc_type":"ValueError","exc_value":"invalid literal for int() with base 10: 'None'","exc_notes":[],"syntax_error":null,"is_cause":false,"frames":[{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":867,"name":"run"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":1159,"name":"_execute_task"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/bases/operator.py","lineno":397,"name":"wrapper"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/standard/operators/python.py","lineno":216,"name":"execute"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/standard/operators/python.py","lineno":239,"name":"execute_callable"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/callback_runner.py","lineno":81,"name":"run"},{"filename":"/opt/airflow/dags/ingest_data.py","lineno":8,"name":"ingest_callable"},{"filename":"<string>","lineno":2,"name":"create_engine"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/sqlalchemy/util/deprecations.py","lineno":375,"name":"warned"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/sqlalchemy/engine/create.py","lineno":514,"name":"create_engine"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/sqlalchemy/engine/url.py","lineno":738,"name":"make_url"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/sqlalchemy/engine/url.py","lineno":794,"name":"_parse_url"}],"is_group":false,"exceptions":[]}]}
{"timestamp":"2025-07-13T16:16:55.785849","level":"info","event":"DAG bundles loaded: dags-folder","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-13T16:16:55.787055","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/data_ingestion_localpg_dag.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-13T16:17:10.132278Z","level":"info","event":"inserted 100000 chunks, took 13.637","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T16:17:32.238688Z","level":"info","event":"inserted 100000 chunks, took 22.100","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T16:18:05.872554Z","level":"info","event":"inserted 100000 chunks, took 33.642","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T16:18:27.533067Z","level":"info","event":"inserted 100000 chunks, took 21.660","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T16:19:08.959834Z","level":"info","event":"inserted 100000 chunks, took 41.426","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T16:19:35.477455Z","level":"info","event":"inserted 100000 chunks, took 26.518","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T16:19:51.215823Z","level":"info","event":"inserted 100000 chunks, took 15.734","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T16:20:13.007375Z","level":"info","event":"inserted 100000 chunks, took 21.789","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T16:20:26.957010Z","level":"info","event":"inserted 100000 chunks, took 13.954","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T16:20:59.821786Z","level":"info","event":"inserted 100000 chunks, took 32.866","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T16:21:31.823956Z","level":"info","event":"inserted 100000 chunks, took 31.998","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T16:22:10.959845Z","level":"info","event":"inserted 100000 chunks, took 39.135","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T16:22:11.741309","level":"warning","event":"/opt/airflow/dags/ingest_data.py:28: DtypeWarning: Columns (6) have mixed types. Specify dtype option on import or set low_memory=False.\n  df = next(df_iter)\n","logger":"py.warnings"}
{"timestamp":"2025-07-13T16:22:50.190427Z","level":"info","event":"inserted 100000 chunks, took 39.231","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T16:23:03.258455Z","level":"info","event":"inserted 100000 chunks, took 13.063","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T16:23:03.332532","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
