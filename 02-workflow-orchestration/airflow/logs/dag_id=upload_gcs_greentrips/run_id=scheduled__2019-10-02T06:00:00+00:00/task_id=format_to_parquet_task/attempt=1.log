{"timestamp":"2025-07-13T18:39:56.998806","level":"info","event":"DAG bundles loaded: dags-folder","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-13T18:39:57.000642","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/data_ingestion_gcs_dag.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-13T18:40:00.461444","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-07-17T08:54:47.430338","level":"info","event":"DAG bundles loaded: dags-folder","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-17T08:54:47.431410","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/data_ingestion_gcs_dag.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-17T08:54:48.598293","level":"error","event":"Task failed with exception","logger":"task","error_detail":[{"exc_type":"UnicodeDecodeError","exc_value":"'utf-8' codec can't decode byte 0x8b in position 1: invalid start byte","exc_notes":[],"syntax_error":null,"is_cause":false,"frames":[{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":867,"name":"run"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":1159,"name":"_execute_task"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/bases/operator.py","lineno":397,"name":"wrapper"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/standard/operators/python.py","lineno":216,"name":"execute"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/standard/operators/python.py","lineno":239,"name":"execute_callable"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/callback_runner.py","lineno":81,"name":"run"},{"filename":"/opt/airflow/dags/data_ingestion_gcs_dag.py","lineno":32,"name":"format_to_parquet"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pandas/io/parsers/readers.py","lineno":948,"name":"read_csv"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pandas/io/parsers/readers.py","lineno":611,"name":"_read"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pandas/io/parsers/readers.py","lineno":1448,"name":"__init__"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pandas/io/parsers/readers.py","lineno":1723,"name":"_make_engine"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pandas/io/parsers/c_parser_wrapper.py","lineno":93,"name":"__init__"},{"filename":"/opt/airflow/parsers.pyx","lineno":579,"name":"pandas._libs.parsers.TextReader.__cinit__"},{"filename":"/opt/airflow/parsers.pyx","lineno":668,"name":"pandas._libs.parsers.TextReader._get_header"},{"filename":"/opt/airflow/parsers.pyx","lineno":879,"name":"pandas._libs.parsers.TextReader._tokenize_rows"},{"filename":"/opt/airflow/parsers.pyx","lineno":890,"name":"pandas._libs.parsers.TextReader._check_tokenize_status"},{"filename":"/opt/airflow/parsers.pyx","lineno":2050,"name":"pandas._libs.parsers.raise_parser_error"},{"filename":"<frozen codecs>","lineno":322,"name":"decode"}],"is_group":false,"exceptions":[]}]}
{"timestamp":"2025-07-17T17:11:40.559033","level":"info","event":"DAG bundles loaded: dags-folder","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-17T17:11:40.559923","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/data_ingestion_gcs_dag.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-17T17:11:44.132362","level":"warning","event":"/opt/airflow/dags/data_ingestion_gcs_dag.py:31: DtypeWarning: Columns (3) have mixed types. Specify dtype option on import or set low_memory=False.\n  table = pd.read_csv(src_file)\n","logger":"py.warnings"}
{"timestamp":"2025-07-17T17:11:45.795055","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-07-17T17:18:08.255638","level":"info","event":"DAG bundles loaded: dags-folder","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-17T17:18:08.256570","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/data_ingestion_gcs_dag.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-17T17:18:13.768101","level":"warning","event":"/opt/airflow/dags/data_ingestion_gcs_dag.py:31: DtypeWarning: Columns (3) have mixed types. Specify dtype option on import or set low_memory=False.\n  table = pd.read_csv(src_file)\n","logger":"py.warnings"}
{"timestamp":"2025-07-17T17:18:15.877509","level":"error","event":"Task failed with exception","logger":"task","error_detail":[{"exc_type":"ArrowTypeError","exc_value":"(\"Expected bytes, got a 'int' object\", 'Conversion failed for column store_and_fwd_flag with type object')","exc_notes":[],"syntax_error":null,"is_cause":false,"frames":[{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":867,"name":"run"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":1159,"name":"_execute_task"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/bases/operator.py","lineno":397,"name":"wrapper"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/standard/operators/python.py","lineno":216,"name":"execute"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/standard/operators/python.py","lineno":239,"name":"execute_callable"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/callback_runner.py","lineno":81,"name":"run"},{"filename":"/opt/airflow/dags/data_ingestion_gcs_dag.py","lineno":36,"name":"format_to_parquet"},{"filename":"/opt/airflow/pyarrow/table.pxi","lineno":4525,"name":"pyarrow.lib.Table.from_pandas"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pyarrow/pandas_compat.py","lineno":624,"name":"dataframe_to_arrays"},{"filename":"/usr/local/lib/python3.12/concurrent/futures/_base.py","lineno":449,"name":"result"},{"filename":"/usr/local/lib/python3.12/concurrent/futures/_base.py","lineno":401,"name":"__get_result"},{"filename":"/usr/local/lib/python3.12/concurrent/futures/thread.py","lineno":59,"name":"run"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pyarrow/pandas_compat.py","lineno":598,"name":"convert_column"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pyarrow/pandas_compat.py","lineno":592,"name":"convert_column"},{"filename":"/opt/airflow/pyarrow/array.pxi","lineno":345,"name":"pyarrow.lib.array"},{"filename":"/opt/airflow/pyarrow/array.pxi","lineno":85,"name":"pyarrow.lib._ndarray_to_array"},{"filename":"/opt/airflow/pyarrow/error.pxi","lineno":91,"name":"pyarrow.lib.check_status"}],"is_group":false,"exceptions":[]}]}
{"timestamp":"2025-07-17T17:20:58.367613","level":"info","event":"DAG bundles loaded: dags-folder","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-17T17:20:58.368441","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/data_ingestion_gcs_dag.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-17T17:21:02.609846","level":"warning","event":"/opt/airflow/dags/data_ingestion_gcs_dag.py:31: DtypeWarning: Columns (3) have mixed types. Specify dtype option on import or set low_memory=False.\n  table = pd.read_csv(src_file)\n","logger":"py.warnings"}
{"timestamp":"2025-07-17T17:21:04.228139","level":"error","event":"Task failed with exception","logger":"task","error_detail":[{"exc_type":"ArrowTypeError","exc_value":"(\"Expected bytes, got a 'float' object\", 'Conversion failed for column store_and_fwd_flag with type object')","exc_notes":[],"syntax_error":null,"is_cause":false,"frames":[{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":867,"name":"run"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":1159,"name":"_execute_task"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/bases/operator.py","lineno":397,"name":"wrapper"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/standard/operators/python.py","lineno":216,"name":"execute"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/standard/operators/python.py","lineno":239,"name":"execute_callable"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/callback_runner.py","lineno":81,"name":"run"},{"filename":"/opt/airflow/dags/data_ingestion_gcs_dag.py","lineno":36,"name":"format_to_parquet"},{"filename":"/opt/airflow/pyarrow/table.pxi","lineno":4525,"name":"pyarrow.lib.Table.from_pandas"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pyarrow/pandas_compat.py","lineno":624,"name":"dataframe_to_arrays"},{"filename":"/usr/local/lib/python3.12/concurrent/futures/_base.py","lineno":449,"name":"result"},{"filename":"/usr/local/lib/python3.12/concurrent/futures/_base.py","lineno":401,"name":"__get_result"},{"filename":"/usr/local/lib/python3.12/concurrent/futures/thread.py","lineno":59,"name":"run"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pyarrow/pandas_compat.py","lineno":598,"name":"convert_column"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pyarrow/pandas_compat.py","lineno":592,"name":"convert_column"},{"filename":"/opt/airflow/pyarrow/array.pxi","lineno":345,"name":"pyarrow.lib.array"},{"filename":"/opt/airflow/pyarrow/array.pxi","lineno":85,"name":"pyarrow.lib._ndarray_to_array"},{"filename":"/opt/airflow/pyarrow/error.pxi","lineno":91,"name":"pyarrow.lib.check_status"}],"is_group":false,"exceptions":[]}]}
{"timestamp":"2025-07-17T17:24:29.008533","level":"info","event":"DAG bundles loaded: dags-folder","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-17T17:24:29.011872","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/data_ingestion_gcs_dag.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-17T17:24:32.647637","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-07-17T17:44:42.188309","level":"info","event":"DAG bundles loaded: dags-folder","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-17T17:44:42.190871","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/data_ingestion_gcs_dag.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-17T17:44:45.635754","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-07-17T17:54:32.029844","level":"info","event":"DAG bundles loaded: dags-folder","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-17T17:54:32.031004","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/data_ingestion_gcs_dag.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-17T17:54:35.775662","level":"warning","event":"/opt/airflow/dags/data_ingestion_gcs_dag.py:40: DtypeWarning: Columns (3) have mixed types. Specify dtype option on import or set low_memory=False.\n  df = pd.read_csv(src_file)\n","logger":"py.warnings"}
{"timestamp":"2025-07-17T17:54:37.221988","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-07-17T18:03:04.172153","level":"info","event":"DAG bundles loaded: dags-folder","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-17T18:03:04.175097","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/data_ingestion_gcs_dag.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-17T18:03:08.143496","level":"warning","event":"/opt/airflow/dags/data_ingestion_gcs_dag.py:40: DtypeWarning: Columns (3) have mixed types. Specify dtype option on import or set low_memory=False.\n  df = pd.read_csv(src_file)\n","logger":"py.warnings"}
{"timestamp":"2025-07-17T18:03:08.974622","level":"error","event":"Task failed with exception","logger":"task","error_detail":[{"exc_type":"IntCastingNaNError","exc_value":"Cannot convert non-finite values (NA or inf) to integer","exc_notes":[],"syntax_error":null,"is_cause":false,"frames":[{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":867,"name":"run"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":1159,"name":"_execute_task"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/bases/operator.py","lineno":397,"name":"wrapper"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/standard/operators/python.py","lineno":216,"name":"execute"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/standard/operators/python.py","lineno":239,"name":"execute_callable"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/callback_runner.py","lineno":81,"name":"run"},{"filename":"/opt/airflow/dags/data_ingestion_gcs_dag.py","lineno":43,"name":"format_to_parquet"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pandas/core/generic.py","lineno":6534,"name":"astype"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pandas/core/internals/managers.py","lineno":414,"name":"astype"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pandas/core/internals/managers.py","lineno":354,"name":"apply"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pandas/core/internals/blocks.py","lineno":616,"name":"astype"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pandas/core/dtypes/astype.py","lineno":238,"name":"astype_array_safe"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pandas/core/dtypes/astype.py","lineno":183,"name":"astype_array"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pandas/core/dtypes/astype.py","lineno":101,"name":"_astype_nansafe"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pandas/core/dtypes/astype.py","lineno":146,"name":"_astype_float_to_int_nansafe"}],"is_group":false,"exceptions":[]}]}
{"timestamp":"2025-07-17T18:06:48.389679","level":"info","event":"DAG bundles loaded: dags-folder","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-17T18:06:48.409732","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/data_ingestion_gcs_dag.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-17T18:06:57.021802","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-07-17T18:08:56.548247","level":"info","event":"DAG bundles loaded: dags-folder","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-17T18:08:56.548969","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/data_ingestion_gcs_dag.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-17T18:08:59.202149","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
